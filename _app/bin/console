#!/usr/bin/env php
<?php
require __DIR__ . '/../vendor/autoload.php';

use PHPNE\Console;

$container = new Console\Container;

$container['configuration'] = $container->share(function($container) {
    return new Console\Configuration(array(
        'view.path'         => realpath(__DIR__ . '/../views'),
        'page.path'         => realpath(__DIR__ . '/../views/pages'),
        'page.save.path'    => realpath(__DIR__ . '/../..'),
        'post.path'         => realpath(__DIR__ . '/../views/pages/posts'),
        'post.save.path'    => realpath(__DIR__ . '/../../posts'),
    ));
});

$container['twig'] = $container->share(function($container) {
    $twig = new Twig_Environment(
        new Twig_Loader_Filesystem(array(
            $container['configuration']->get('view.path'),
            $container['configuration']->get('page.path'),
            $container['configuration']->get('post.path'),
        ))
    );
    
    $twig->addExtension(new Aptoma\Twig\Extension\MarkdownExtension(
        new dflydev\markdown\MarkdownParser
    ));
    
    return $twig;
});

$container['page.repository'] = $container->share(function($container) {
    return new PHPNE\Entity\PageRepository(
        $container['configuration']->get('page.path')
    );
});

$container['page.writer'] = $container->share(function($container) {
    $writer = new PHPNE\Entity\PageWriter($container['twig']);
    
    return $writer->setSavePath($container['configuration']->get('page.save.path'));
});

$container['post.repository'] = $container->share(function($container) {
    return new PHPNE\Entity\PostRepository(
        $container['configuration']->get('post.path')
    );
});

$container['post.writer'] = $container->share(function($container) {
    $writer = new PHPNE\Entity\PostWriter($container['twig']);
    
    return $writer->setSavePath($container['configuration']->get('post.save.path'));
});

$console = new Console\Application;
$console->setContainer($container);
$console->add(new Console\Command\GenerateCommand);
$console->run();